@model ShoppingMiddleware.Models.NguoiDung

@{
    ViewBag.Title = "Create";
}


@*</head>

    <body>*@
<!-- Layout wrapper -->
<div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">
        <!-- Layout container -->
        <div class="">
            <!-- Navbar -->
            <!-- / Navbar -->
            <!-- Content wrapper -->
            <div class="content-wrapper">
                <!-- Content -->

                <div class="container-xxl flex-grow-1 container-p-y">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="nav-align-top">
                                <ul class="nav nav-pills flex-column flex-md-row mb-6 gap-2 gap-lg-0">
                                    <li class="nav-item">
                                        <a class="nav-link active waves-effect waves-light" href="javascript:void(0);"><i class="ri-group-line me-1_5"></i>Account</a>
                                    </li>
                                </ul>
                            </div>
                            <div class="card mb-6">
                                <!-- Account -->
                                <div class="card-body">
                                    <div class="d-flex align-items-start align-items-sm-center gap-6">
                                        <img src="../assets/img/avatars/1.png" alt="user-avatar" class="d-block w-px-100 h-px-100 rounded" id="uploadedAvatar">
                                    </div>
                                </div>
                                <div class="card-body pt-0">

                                    @using (Html.BeginForm())
                                    {
                                        @Html.AntiForgeryToken()

                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="row mt-1 g-5">
                                            <div class="col-md-6">
                                                <div class="form-floating form-floating-outline">
                                                    @Html.TextBoxFor(model => model.Ho_TenDem, new { @class = "form-control", onchange = "ShowResetButton()", @id = "firstName", @placeholder = "Enter your first name" })
                                                    @Html.ValidationMessageFor(model => model.Ho_TenDem, "", new { @class = "text-danger" })
                                                    <label for="firstName">First Name</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-floating form-floating-outline">
                                                    @Html.TextBoxFor(model => model.TenND, new { @class = "form-control", @name = "lastName", @id = "lastName", @placeholder = "Enter your last name" })
                                                    @Html.ValidationMessageFor(model => model.TenND, "", new { @class = "text-danger" })
                                                    <label for="lastName">Last Name</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-floating form-floating-outline">
                                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = "email", @name = "lastName", @id = "email", @placeholder = "Enter your email" })
                                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                                    <label for="email">E-mail</label>
                                                </div>
                                            </div>

                                            <div class="col-md-6">
                                                <div class="input-group input-group-merge">
                                                    <div class="form-floating form-floating-outline">
                                                        @Html.TextBoxFor(model => model.SDT, new { @class = "form-control", @type = "number", @name = "sđt", @id = "sđt", @placeholder = "Enter your NumberPhone" })
                                                        <label for="phoneNumer">Phone Numer</label>
                                                    </div>
                                                    <span class="input-group-text">+84</span>
                                                </div>
                                                @if (ViewData.ModelState.ContainsKey("SDT") && ViewData.ModelState["SDT"].Errors.Count > 0)
                                                {
                                                    foreach (var error in ViewData.ModelState["SDT"].Errors)
                                                    {
                                                        @Html.Raw($"<span class='text-danger'>{error.ErrorMessage}</span><br />")
                                                    }
                                                }
                                            </div>

                                            <div class="col-md-6">
                                                <div class="form-floating form-floating-outline">
                                                    @Html.TextBoxFor(model => model.Tuoi, new { @class = "form-control", @name = "Tuoi", @id = "Tuoi", @placeholder = "Enter your Age" })
                                                    <label for="age">Age</label>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Tuoi, "", new { @class = "text-danger" })

                                            </div>

                                            <div class="col-md-6">
                                                <div class="input-group input-group-merge">
                                                    <div class="form-floating form-floating-outline">
                                                        @Html.DropDownListFor(model => model.GioiTinh,
                                                            new List<SelectListItem>
                                                            {
                                                                new SelectListItem { Text = "chooses", Value = "" },
                                                                new SelectListItem { Text = "Male",  Value = "M" },
                                                                new SelectListItem { Text = "Female",   Value = "F" }
                                                            },
                                                            new { @class = "form-control", @id = "gioiTinh" })
                                                        <label for="gioiTinh">Gender</label>
                                                    </div>
                                                    <span class="input-group-text">&#x25BC;</span>
                                                </div>
                                            </div>


                                            <div class="col-md-6">
                                                <div class="form-floating form-floating-outline">
                                                    @Html.Raw(Html.TextBoxFor(model => model.TenDangNhap, new { @class = "form-control", @name = "TenDangNhap", @id = "TenDangNhap", @placeholder = "Enter your TenDangNhap" }))
                                                    <label for="userName">User Name</label>
                                                </div>

                                                @if (ViewData.ModelState.ContainsKey("TenDangNhap") && ViewData.ModelState["TenDangNhap"].Errors.Count > 0)
                                                {
                                                    foreach (var error in ViewData.ModelState["TenDangNhap"].Errors)
                                                    {
                                                        @Html.Raw($"<span class='text-danger'>{error.ErrorMessage}</span><br />")
                                                    }
                                                }
                                            </div>


                                            <div class="col-md-6">
                                                <div class="form-floating form-floating-outline">
                                                    @Html.TextBoxFor(model => model.MatKhau, new { @class = "form-control", @name = "MatKhau", @type = "password", @id = "MatKhau", @placeholder = "Enter your password" })
                                                    <label for="password">password</label>
                                                </div>
                                                <span id="passwordDanger" style="display: none;" class="badge bg-danger rounded-pill"> </span>
                                                <span id="passwordWaring" style="display: none;" class="badge bg-warning rounded-pill"> </span>
                                                <span id="passwordSuccess" style="display: none;" class="badge bg-success rounded-pill"> </span>
                                                <div>
                                                    <p id="ValidPasswordByJS">
                                                        @if (ViewData.ModelState.ContainsKey("MatKhau") && ViewData.ModelState["MatKhau"].Errors.Count > 0)
                                                        {
                                                            foreach (var error in ViewData.ModelState["MatKhau"].Errors)
                                                            {
                                                                @Html.Raw($"<span class='text-danger'>{error.ErrorMessage}</span><br />")
                                                            }
                                                        }
                                                    </p>
                                                </div>
                                            </div>

                                            <div class="col-md-6">
                                                <div class="input-group input-group-merge">
                                                    <div class="form-floating form-floating-outline">
                                                        @Html.DropDownList("IDQuyen", null, htmlAttributes: new { @class = "form-control" })
                                                        <label for="Role">Role</label>
                                                    </div>
                                                    <span class="input-group-text">&#x25BC;</span>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="mt-6">
                                            <button type="submit" value="Create" class="btn btn-primary me-3 waves-effect waves-light">Create</button>
                                            <button id="resetbnt" type="reset" class="btn btn-outline-secondary waves-effect">Reset</button>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>

    window.onload = function () {
        selectMenu("CreateUser");
    }
</script>